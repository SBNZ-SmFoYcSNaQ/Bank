package com.sample.rules;

import riders.bank.model.Credit;
import riders.bank.model.Client;
import java.time.LocalDate;

query suitableMatch( Credit $credit )
    fulfilsStableIncomeRequirement ( $credit; ) and
    fulfilsIncomeSizeRequirement( $credit; ) and
    isClientNotInRiskGroup ( $credit; )
end

query fulfilsStableIncomeRequirement( Credit $credit )
    eval($credit.getEmploymentInfo().getEmploymentEndDate().isAfter($credit.getMaximumRepaymentPeriod()))
end

query fulfilsIncomeSizeRequirement( Credit $credit )
    eval($credit.getEmploymentInfo().getSalary() >= 0.5 * $credit.getAmount())
end

query isClientNotInRiskGroup( Credit $credit )
    eval($credit.getClient().getBirthdate().isAfter(LocalDate.now().minusYears(65)))
end


//query hasRepaymentPeriod( Credit $credit )
//    eval($credit.getMinimumRepaymentPeriod() != null && $credit.getMaximumRepaymentPeriod != null)
//end

rule "is client suitable for credit"
no-loop true
when
    $credit: Credit()
    suitableMatch( $credit; )
then
    System.out.println("Client " + $credit.getClient() + " is suitable");
    $credit.setRecommended(true);
end